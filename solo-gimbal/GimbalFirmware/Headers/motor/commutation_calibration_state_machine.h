#include "PM_Sensorless.h"
#include "motor/motor_drive_state_machine.h"

#ifndef COMMUTATION_CALIBRATION_STATE_MACHINE_H_
#define COMMUTATION_CALIBRATION_STATE_MACHINE_H_

#define COMMUTATION_CALIBRATION_NUM_ELECTRICAL_CYCLES 4
#define COMMUTATION_CALIBRATION_ELECTRICAL_CYCLE_SUBDIVISIONS 16
#define COMMUTATION_CALIBRATION_RAMP_SPEED 1
#define COMMUTATION_CALIBRATION_SETTLE_RAMP_SPEED 5
#define COMMUTATION_CALIBRATION_SETTLING_TIME_MS 500
#define COMMUTATION_CALIBRATION_HARDSTOP_SETTLING_TIME_MS 50
#define COMMUTATION_ARRAY_SIZE (COMMUTATION_CALIBRATION_NUM_ELECTRICAL_CYCLES * COMMUTATION_CALIBRATION_ELECTRICAL_CYCLE_SUBDIVISIONS)

#define MAX_STOPPED_ENCODER_MOVEMENT_ALLOWED 0.0005
#define HARDSTOP_ENCODER_DETECTION_THRESHOLD 0.002

static const int AXIS_CALIBRATION_SETTLING_TIME_MS[AXIS_CNT] = {
    100,    // EL
    500,    // AZ
    300     // ROLL
};

typedef enum {
    COMMUTATION_CALIBRATION_STATE_INIT,
    COMMUTATION_CALIBRATION_STATE_COMMUTATE,
    COMMUTATION_CALIBRATION_STATE_LOCK_ROTOR,
    COMMUTATION_CALIBRATION_STATE_RAMP_ID,
    COMMUTATION_CALIBRATION_STATE_MOVE_TO_HARDSTOP,
    COMMUTATION_CALIBRATION_STATE_MOVE_UP_FROM_HARDSTOP,
    COMMUTATION_CALIBRATION_STATE_WAIT_FOR_SETTLE,
    COMMUTATION_CALIBRATION_STATE_MOVE_ID,
    COMMUTATION_CALIBRATION_STATE_TEST,
    COMMUTATION_CALIBRATION_STATE_TEST_MOVE,
    COMMUTATION_CALIBRATION_STATE_TEST_CHECK_POS,
    COMMUTATION_CALIBRATION_STATE_COMPLETE
} CommutationCalibrationState;

typedef struct {
    CommutationCalibrationState calibration_state;
    Uint16 current_iteration;
    Uint16 current_elec_cycle;
    Uint16 current_elec_sub_cycle;
    Uint16 current_dir;
    Uint32 settling_timer;
    int16 ezero_step;
    RMPCNTL ramp_cntl;
    float calibration_data[COMMUTATION_ARRAY_SIZE];
} CommutationCalibrationParms;

void CommutationCalibrationStateMachine(MotorDriveParms* md_parms, EncoderParms* encoder_parms, AxisParms* axis_parms, CommutationCalibrationParms* cc_parms, ControlBoardParms* cb_parms);

#endif /* COMMUTATION_CALIBRATION_STATE_MACHINE_H_ */

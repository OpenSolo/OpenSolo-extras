<ARG>
<NAME>GstXvImageSink::brightness</NAME>
<TYPE>gint</TYPE>
<RANGE>[-1000,1000]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Brightness</NICK>
<BLURB>The brightness of the video.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::contrast</NAME>
<TYPE>gint</TYPE>
<RANGE>[-1000,1000]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Contrast</NICK>
<BLURB>The contrast of the video.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::display</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Display</NICK>
<BLURB>X Display name.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::hue</NAME>
<TYPE>gint</TYPE>
<RANGE>[-1000,1000]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Hue</NICK>
<BLURB>The hue of the video.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::pixel-aspect-ratio</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Pixel Aspect Ratio</NICK>
<BLURB>The pixel aspect ratio of the device.</BLURB>
<DEFAULT>"1/1"</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::saturation</NAME>
<TYPE>gint</TYPE>
<RANGE>[-1000,1000]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Saturation</NICK>
<BLURB>The saturation of the video.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::synchronous</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Synchronous</NICK>
<BLURB>When enabled, runs the X display in synchronous mode. (unrelated to A/V sync, used only for debugging).</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::force-aspect-ratio</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Force aspect ratio</NICK>
<BLURB>When enabled, scaling will respect original aspect ratio.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::device</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Adaptor number</NICK>
<BLURB>The number of the video adaptor.</BLURB>
<DEFAULT>"0"</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::device-name</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Adaptor name</NICK>
<BLURB>The name of the video adaptor.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::handle-events</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Handle XEvents</NICK>
<BLURB>When enabled, XEvents will be selected and handled.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::double-buffer</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Double-buffer</NICK>
<BLURB>Whether to double-buffer the output.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::handle-expose</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Handle expose</NICK>
<BLURB>When enabled, the current frame will always be drawn in response to X Expose events.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::autopaint-colorkey</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Autofill with colorkey</NICK>
<BLURB>Whether to autofill overlay with colorkey.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::colorkey</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Colorkey</NICK>
<BLURB>Color to use for the overlay mask.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::draw-borders</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Colorkey</NICK>
<BLURB>Draw black borders to fill unused area in force-aspect-ratio mode.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::window-height</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>window-height</NICK>
<BLURB>Height of the window.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstXvImageSink::window-width</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>window-width</NICK>
<BLURB>Width of the window.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstXImageSink::display</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Display</NICK>
<BLURB>X Display name.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstXImageSink::pixel-aspect-ratio</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Pixel Aspect Ratio</NICK>
<BLURB>The pixel aspect ratio of the device.</BLURB>
<DEFAULT>"1/1"</DEFAULT>
</ARG>

<ARG>
<NAME>GstXImageSink::synchronous</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Synchronous</NICK>
<BLURB>When enabled, runs the X display in synchronous mode. (unrelated to A/V sync, used only for debugging).</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXImageSink::force-aspect-ratio</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Force aspect ratio</NICK>
<BLURB>When enabled, reverse caps negotiation (scaling) will respect original aspect ratio.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXImageSink::handle-events</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Handle XEvents</NICK>
<BLURB>When enabled, XEvents will be selected and handled.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXImageSink::handle-expose</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Handle expose</NICK>
<BLURB>When enabled, the current frame will always be drawn in response to X Expose events.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstXImageSink::window-height</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>window-height</NICK>
<BLURB>Height of the window.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstXImageSink::window-width</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>window-width</NICK>
<BLURB>Width of the window.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstV4lSrc::autoprobe</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Autoprobe</NICK>
<BLURB>Whether the device should be probed for all possible features.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstV4lSrc::autoprobe-fps</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Autoprobe FPS</NICK>
<BLURB>Whether the device should be probed for framerates.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstV4lSrc::copy-mode</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Copy mode</NICK>
<BLURB>Whether to send out copies of buffers, or direct pointers to the mmap region.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstV4lSrc::timestamp-offset</NAME>
<TYPE>gint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Timestamp offset</NICK>
<BLURB>A time offset subtracted from timestamps set on buffers (in ns).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioresample::filter-length</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>rwx</FLAGS>
<NICK>filter length</NICK>
<BLURB>Length of the resample filter.</BLURB>
<DEFAULT>16</DEFAULT>
</ARG>

<ARG>
<NAME>GstVolume::mute</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Mute</NICK>
<BLURB>mute channel.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVolume::volume</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,10]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Volume</NICK>
<BLURB>volume factor, 1.0=100%.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::pattern</NAME>
<TYPE>GstVideoTestSrcPattern</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Pattern</NICK>
<BLURB>Type of test pattern to generate.</BLURB>
<DEFAULT>SMPTE 100% color bars</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::timestamp-offset</NAME>
<TYPE>gint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Timestamp offset</NICK>
<BLURB>An offset added to timestamps set on buffers (in ns).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::is-live</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Is Live</NICK>
<BLURB>Whether to act as a live source.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::peer-alloc</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Peer Alloc</NICK>
<BLURB>Ask the peer to allocate an output buffer.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::colorspec</NAME>
<TYPE>GstVideoTestSrcColorSpec</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Color Specification</NICK>
<BLURB>Generate video in the given color specification (Deprecated: use a caps filter with video/x-raw-yuv,color-matrix="sdtv" or "hdtv" instead).</BLURB>
<DEFAULT>ITU-R Rec. BT.601</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::k0</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate zero order phase</NICK>
<BLURB>Zoneplate zero order phase, for generating plain fields or phase offsets.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::kt</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate 1st order t phase</NICK>
<BLURB>Zoneplate 1st order t phase, for generating phase rotation as a function of time.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::kt2</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate 2nd order t phase</NICK>
<BLURB>Zoneplate 2nd order t phase, t*t/256 cycles per picture.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::kx</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate 1st order x phase</NICK>
<BLURB>Zoneplate 1st order x phase, for generating constant horizontal frequencies.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::kx2</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate 2nd order x phase</NICK>
<BLURB>Zoneplate 2nd order x phase, normalised to kx2/256 cycles per horizontal pixel at width/2 from origin.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::kxt</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate x*t product phase</NICK>
<BLURB>Zoneplate x*t product phase, normalised to kxy/256 cycles per vertical pixel at width/2 from origin.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::kxy</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate x*y product phase</NICK>
<BLURB>Zoneplate x*y product phase.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::ky</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate 1st order y phase</NICK>
<BLURB>Zoneplate 1st order y phase, for generating contant vertical frequencies.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::ky2</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate 2nd order y phase</NICK>
<BLURB>Zoneplate 2nd order y phase, normailsed to ky2/256 cycles per vertical pixel at height/2 from origin.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::kyt</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate y*t product phase</NICK>
<BLURB>Zoneplate y*t product phase.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::xoffset</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate 2nd order products x offset</NICK>
<BLURB>Zoneplate 2nd order products x offset.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::yoffset</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Zoneplate 2nd order products y offset</NICK>
<BLURB>Zoneplate 2nd order products y offset.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::background-color</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Background Color</NICK>
<BLURB>Background color to use (big-endian ARGB).</BLURB>
<DEFAULT>4278190080</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::foreground-color</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Foreground Color</NICK>
<BLURB>Foreground color to use (big-endian ARGB).</BLURB>
<DEFAULT>4294967295</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoTestSrc::horizontal-speed</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Horizontal Speed</NICK>
<BLURB>Scroll image number of pixels per frame (positive is scroll to the left).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoscale::method</NAME>
<TYPE>GstVideoscaleMethod</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>method</NICK>
<BLURB>method.</BLURB>
<DEFAULT>Nearest Neighbour</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideorate::drop</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Drop</NICK>
<BLURB>Number of dropped frames.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideorate::duplicate</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Duplicate</NICK>
<BLURB>Number of duplicated frames.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideorate::in</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>In</NICK>
<BLURB>Number of input frames.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideorate::new-pref</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>New Pref</NICK>
<BLURB>Value indicating how much to prefer new frames.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideorate::out</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Out</NICK>
<BLURB>Number of output frames.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideorate::silent</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>silent</NICK>
<BLURB>Don't emit notify for dropped and duplicated frames.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPClientSink::host</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Host</NICK>
<BLURB>The host/IP to send the packets to.</BLURB>
<DEFAULT>"localhost"</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPClientSink::port</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,65535]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Port</NICK>
<BLURB>The port to send the packets to.</BLURB>
<DEFAULT>4953</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPClientSink::protocol</NAME>
<TYPE>GstTCPProtocol</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Protocol</NICK>
<BLURB>The protocol to wrap data in.</BLURB>
<DEFAULT>GST_TCP_PROTOCOL_NONE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPClientSrc::host</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Host</NICK>
<BLURB>The host IP address to receive packets from.</BLURB>
<DEFAULT>"localhost"</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPClientSrc::port</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,65535]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Port</NICK>
<BLURB>The port to receive packets from.</BLURB>
<DEFAULT>4953</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPClientSrc::protocol</NAME>
<TYPE>GstTCPProtocol</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Protocol</NICK>
<BLURB>The protocol to wrap data in.</BLURB>
<DEFAULT>GST_TCP_PROTOCOL_NONE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPServerSink::host</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>host</NICK>
<BLURB>The host/IP to send the packets to.</BLURB>
<DEFAULT>"localhost"</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPServerSink::port</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,65535]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>port</NICK>
<BLURB>The port to send the packets to.</BLURB>
<DEFAULT>4953</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPServerSrc::host</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Host</NICK>
<BLURB>The hostname to listen as.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPServerSrc::port</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,65535]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Port</NICK>
<BLURB>The port to listen to.</BLURB>
<DEFAULT>4953</DEFAULT>
</ARG>

<ARG>
<NAME>GstTCPServerSrc::protocol</NAME>
<TYPE>GstTCPProtocol</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Protocol</NICK>
<BLURB>The protocol to wrap data in.</BLURB>
<DEFAULT>GST_TCP_PROTOCOL_NONE</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::buffers-max</NAME>
<TYPE>gint</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Buffers max</NICK>
<BLURB>max number of buffers to queue for a client (-1 = no limit).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::buffers-queued</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Buffers queued</NICK>
<BLURB>Number of buffers currently queued.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::buffers-soft-max</NAME>
<TYPE>gint</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Buffers soft max</NICK>
<BLURB>Recover client when going over this limit (-1 = no limit).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::bytes-served</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Bytes served</NICK>
<BLURB>Total number of bytes send to all clients.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::bytes-to-serve</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Bytes to serve</NICK>
<BLURB>Number of bytes received to serve to clients.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::mode</NAME>
<TYPE>GstFDSetMode</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Mode</NICK>
<BLURB>The mode for selecting activity on the fds (deprecated).</BLURB>
<DEFAULT>Poll</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::protocol</NAME>
<TYPE>GstTCPProtocol</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Protocol</NICK>
<BLURB>The protocol to wrap data in. GDP protocol here is deprecated. Please use gdppay element.</BLURB>
<DEFAULT>GST_TCP_PROTOCOL_NONE</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::recover-policy</NAME>
<TYPE>GstRecoverPolicy</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Recover Policy</NICK>
<BLURB>How to recover when client reaches the soft max.</BLURB>
<DEFAULT>Do not try to recover</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::sync-clients</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Sync clients</NICK>
<BLURB>(DEPRECATED) Sync clients to a keyframe.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::sync-method</NAME>
<TYPE>GstSyncMethod</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Sync Method</NICK>
<BLURB>How to sync new clients to the stream.</BLURB>
<DEFAULT>Serve starting from the latest buffer</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::timeout</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Timeout</NICK>
<BLURB>Maximum inactivity timeout in nanoseconds for a client (0 = no limit).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::buffers-min</NAME>
<TYPE>gint</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Buffers min</NICK>
<BLURB>min number of buffers to queue (-1 = as few as possible).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::burst-unit</NAME>
<TYPE>GstTCPUnitType</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Burst unit</NICK>
<BLURB>The format of the burst units (when sync-method is burst[[-with]-keyframe]).</BLURB>
<DEFAULT>Undefined</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::burst-value</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Burst value</NICK>
<BLURB>The amount of burst expressed in burst-unit.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::bytes-min</NAME>
<TYPE>gint</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Bytes min</NICK>
<BLURB>min number of bytes to queue (-1 = as little as possible).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::time-min</NAME>
<TYPE>gint64</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Time min</NICK>
<BLURB>min number of time to queue (-1 = as little as possible).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::unit-type</NAME>
<TYPE>GstTCPUnitType</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Units type</NICK>
<BLURB>The unit to measure the max/soft-max/queued properties.</BLURB>
<DEFAULT>Buffers</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::units-max</NAME>
<TYPE>gint64</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Units max</NICK>
<BLURB>max number of units to queue (-1 = no limit).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::units-soft-max</NAME>
<TYPE>gint64</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Units soft max</NICK>
<BLURB>Recover client when going over this limit (-1 = no limit).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::qos-dscp</NAME>
<TYPE>gint</TYPE>
<RANGE>[-1,63]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>QoS diff srv code point</NICK>
<BLURB>Quality of Service, differentiated services code point (-1 default).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::handle-read</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Handle Read</NICK>
<BLURB>Handle client reads and discard the data.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::resend-streamheader</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Resend streamheader</NICK>
<BLURB>Resend the streamheader if it changes in the caps.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstMultiFdSink::num-fds</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Number of fds</NICK>
<BLURB>The current number of client file descriptors.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin::threaded</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Threaded</NICK>
<BLURB>Use threads.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin::sink-caps</NAME>
<TYPE>GstCaps*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Sink Caps</NICK>
<BLURB>The caps of the input data. (NULL = use typefind element).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::audio-sink</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Audio Sink</NICK>
<BLURB>the audio output element to use (NULL = default sink).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::frame</NAME>
<TYPE>GstBuffer*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Frame</NICK>
<BLURB>The last frame (NULL = no video available).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::subtitle-font-desc</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>w</FLAGS>
<NICK>Subtitle font description</NICK>
<BLURB>Pango font description of font to be used for subtitle rendering.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::video-sink</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Video Sink</NICK>
<BLURB>the video output element to use (NULL = default sink).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::vis-plugin</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Vis plugin</NICK>
<BLURB>the visualization element to use (NULL = none).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::volume</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,10]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>volume</NICK>
<BLURB>volume.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin::connection-speed</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Connection Speed</NICK>
<BLURB>Network connection speed in kbps (0 = unknown).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudiorate::add</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Add</NICK>
<BLURB>Number of added samples.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudiorate::drop</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Drop</NICK>
<BLURB>Number of dropped samples.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudiorate::in</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>In</NICK>
<BLURB>Number of input samples.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudiorate::out</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Out</NICK>
<BLURB>Number of output samples.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudiorate::silent</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>silent</NICK>
<BLURB>Don't emit notify for dropped and duplicated frames.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVorbisEnc::bitrate</NAME>
<TYPE>gint</TYPE>
<RANGE>[-1,250001]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Target Bitrate</NICK>
<BLURB>Attempt to encode at a bitrate averaging this (in bps). This uses the bitrate management engine, and is not recommended for most users. Quality is a better alternative. (-1 == disabled).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstVorbisEnc::last-message</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>last-message</NICK>
<BLURB>The last status message.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstVorbisEnc::managed</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Managed</NICK>
<BLURB>Enable bitrate management engine.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVorbisEnc::max-bitrate</NAME>
<TYPE>gint</TYPE>
<RANGE>[-1,250001]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Maximum Bitrate</NICK>
<BLURB>Specify a maximum bitrate (in bps). Useful for streaming applications. (-1 == disabled).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstVorbisEnc::min-bitrate</NAME>
<TYPE>gint</TYPE>
<RANGE>[-1,250001]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Minimum Bitrate</NICK>
<BLURB>Specify a minimum bitrate (in bps). Useful for encoding for a fixed-size channel. (-1 == disabled).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstVorbisEnc::quality</NAME>
<TYPE>gfloat</TYPE>
<RANGE>[-0.1,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Quality</NICK>
<BLURB>Specify quality instead of specifying a particular bitrate.</BLURB>
<DEFAULT>0.3</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraDec::crop</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Crop</NICK>
<BLURB>Crop the image to the visible region.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::bitrate</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,16777215]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Bitrate</NICK>
<BLURB>Compressed video bitrate (kbps).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::border</NAME>
<TYPE>GstTheoraEncBorderMode</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Border</NICK>
<BLURB>ignored and kept for API compat only.</BLURB>
<DEFAULT>Black Border</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::center</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Center</NICK>
<BLURB>ignored and kept for API compat only.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::keyframe-auto</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Keyframe Auto</NICK>
<BLURB>Automatic keyframe detection.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::keyframe-force</NAME>
<TYPE>gint</TYPE>
<RANGE>[1,32768]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Keyframe force</NICK>
<BLURB>Force keyframe every N frames.</BLURB>
<DEFAULT>64</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::keyframe-freq</NAME>
<TYPE>gint</TYPE>
<RANGE>[1,32768]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Keyframe frequency</NICK>
<BLURB>Keyframe frequency.</BLURB>
<DEFAULT>64</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::keyframe-mindistance</NAME>
<TYPE>gint</TYPE>
<RANGE>[1,32768]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Keyframe mindistance</NICK>
<BLURB>ignored and kept for API compat only.</BLURB>
<DEFAULT>8</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::keyframe-threshold</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,32768]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Keyframe threshold</NICK>
<BLURB>ignored and kept for API compat only.</BLURB>
<DEFAULT>80</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::noise-sensitivity</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,32768]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Noise sensitivity</NICK>
<BLURB>ignored and kept for API compat only.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::quality</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,63]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Quality</NICK>
<BLURB>Video quality.</BLURB>
<DEFAULT>48</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::quick</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Quick</NICK>
<BLURB>ignored and kept for API compat only.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::sharpness</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,2]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Sharpness</NICK>
<BLURB>ignored and kept for API compat only.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::speed-level</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,2]</RANGE>
<FLAGS>rwx</FLAGS>
<NICK>Speed level</NICK>
<BLURB>Controls the amount of analysis performed when encoding. Higher values trade compression quality for speed. This property requires libtheora version >= 1.0, and the maximum value may vary based on encoder version.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::cap-overflow</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Cap Overflow</NICK>
<BLURB>Enable capping of bit reservoir overflows.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::cap-underflow</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Cap Underflow</NICK>
<BLURB>Enable capping of bit reservoir underflows.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::drop-frames</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Drop Frames</NICK>
<BLURB>Allow or disallow frame dropping.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::rate-buffer</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,1000]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Rate Control Buffer</NICK>
<BLURB>Sets the size of the rate control buffer, in units of frames.  The default value of 0 instructs the encoder to automatically select an appropriate value.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::vp3-compatible</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>VP3 Compatible</NICK>
<BLURB>Disables non-VP3 compatible features.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::multipass-cache-file</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Multipass Cache File</NICK>
<BLURB>Multipass cache file.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraEnc::multipass-mode</NAME>
<TYPE>GstTheoraEncMultipassMode</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Multipass mode</NICK>
<BLURB>Single pass or first/second pass.</BLURB>
<DEFAULT>Single pass</DEFAULT>
</ARG>

<ARG>
<NAME>GstGnomeVFSSrc::handle</NAME>
<TYPE>GnomeVFSHandle*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>GnomeVFSHandle</NICK>
<BLURB>Handle for GnomeVFS.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGnomeVFSSrc::iradio-genre</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>iradio-genre</NICK>
<BLURB>Genre of the stream.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstGnomeVFSSrc::iradio-mode</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>iradio-mode</NICK>
<BLURB>Enable internet radio mode (extraction of shoutcast/icecast metadata).</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGnomeVFSSrc::iradio-name</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>iradio-name</NICK>
<BLURB>Name of the stream.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstGnomeVFSSrc::iradio-title</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>iradio-title</NICK>
<BLURB>Name of currently playing song.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstGnomeVFSSrc::iradio-url</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>iradio-url</NICK>
<BLURB>Homepage URL for radio stream.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstGnomeVFSSrc::location</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>File Location</NICK>
<BLURB>Location of the file to read.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstGnomeVFSSrc::random-access</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>random-mode</NICK>
<BLURB>Enable random file access.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstOggMux::max-delay</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max delay</NICK>
<BLURB>Maximum delay in multiplexing streams.</BLURB>
<DEFAULT>500000000</DEFAULT>
</ARG>

<ARG>
<NAME>GstOggMux::max-page-delay</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max page delay</NICK>
<BLURB>Maximum delay for sending out a page.</BLURB>
<DEFAULT>500000000</DEFAULT>
</ARG>

<ARG>
<NAME>GstOggMux::max-tolerance</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max time tolerance</NICK>
<BLURB>Maximum timestamp difference for maintaining perfect granules.</BLURB>
<DEFAULT>40000000</DEFAULT>
</ARG>

<ARG>
<NAME>GstOggMux::skeleton</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Skeleton</NICK>
<BLURB>Whether to include a Skeleton track.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAlsaSrc::device</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Device</NICK>
<BLURB>ALSA device, as defined in an asound configuration file.</BLURB>
<DEFAULT>"default"</DEFAULT>
</ARG>

<ARG>
<NAME>GstAlsaSrc::device-name</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Device name</NICK>
<BLURB>Human-readable name of the sound device.</BLURB>
<DEFAULT>""</DEFAULT>
</ARG>

<ARG>
<NAME>GstAlsaSrc::card-name</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Card name</NICK>
<BLURB>Human-readable name of the sound card.</BLURB>
<DEFAULT>""</DEFAULT>
</ARG>

<ARG>
<NAME>GstAlsaSink::device</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Device</NICK>
<BLURB>ALSA device, as defined in an asound configuration file.</BLURB>
<DEFAULT>"default"</DEFAULT>
</ARG>

<ARG>
<NAME>GstAlsaSink::device-name</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Device name</NICK>
<BLURB>Human-readable name of the sound device.</BLURB>
<DEFAULT>""</DEFAULT>
</ARG>

<ARG>
<NAME>GstAlsaSink::card-name</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Card name</NICK>
<BLURB>Human-readable name of the sound card.</BLURB>
<DEFAULT>""</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::freq</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,20000]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Frequency</NICK>
<BLURB>Frequency of test signal.</BLURB>
<DEFAULT>440</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::is-live</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Is Live</NICK>
<BLURB>Whether to act as a live source.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::samplesperbuffer</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Samples per buffer</NICK>
<BLURB>Number of samples in each outgoing buffer.</BLURB>
<DEFAULT>1024</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::timestamp-offset</NAME>
<TYPE>gint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Timestamp offset</NICK>
<BLURB>An offset added to timestamps set on buffers (in ns).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::volume</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Volume</NICK>
<BLURB>Volume of test signal.</BLURB>
<DEFAULT>0.8</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::wave</NAME>
<TYPE>GstAudioTestSrcWave</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Waveform</NICK>
<BLURB>Oscillator waveform.</BLURB>
<DEFAULT>Sine</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::can-activate-pull</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Can activate pull</NICK>
<BLURB>Can activate in pull mode.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioTestSrc::can-activate-push</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Can activate push</NICK>
<BLURB>Can activate in push mode.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoScale::method</NAME>
<TYPE>GstVideoScaleMethod</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>method</NICK>
<BLURB>method.</BLURB>
<DEFAULT>Bilinear</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoScale::add-borders</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Add Borders</NICK>
<BLURB>Add black borders if necessary to keep the display aspect ratio.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoScale::dither</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rwx</FLAGS>
<NICK>Dither</NICK>
<BLURB>Add dither (only used for Lanczos method).</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoScale::envelope</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,5]</RANGE>
<FLAGS>rwx</FLAGS>
<NICK>Envelope</NICK>
<BLURB>Size of filter envelope.</BLURB>
<DEFAULT>2</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoScale::sharpen</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rwx</FLAGS>
<NICK>Sharpen</NICK>
<BLURB>Sharpening.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoScale::sharpness</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,2]</RANGE>
<FLAGS>rwx</FLAGS>
<NICK>Sharpness</NICK>
<BLURB>Sharpness of filter.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::drop</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Drop</NICK>
<BLURB>Number of dropped frames.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::duplicate</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Duplicate</NICK>
<BLURB>Number of duplicated frames.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::in</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>In</NICK>
<BLURB>Number of input frames.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::new-pref</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>New Pref</NICK>
<BLURB>Value indicating how much to prefer new frames (unused).</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::out</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Out</NICK>
<BLURB>Number of output frames.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::silent</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>silent</NICK>
<BLURB>Don't emit notify for dropped and duplicated frames.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::skip-to-first</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Skip to first buffer</NICK>
<BLURB>Don't produce buffers before the first one we receive.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::average-period</NAME>
<TYPE>guint64</TYPE>
<RANGE><= G_MAXINT64</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Period over which to average</NICK>
<BLURB>Period over which to average the framerate (in ns) (0 = disabled).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::drop-only</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Only Drop</NICK>
<BLURB>Only drop frames, no duplicates are produced.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::force-fps</NAME>
<TYPE>GstFraction</TYPE>
<RANGE></RANGE>
<FLAGS>rwx</FLAGS>
<NICK>Force output framerate</NICK>
<BLURB>Force output framerate (negative means negotiate via caps).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstVideoRate::max-rate</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 1</RANGE>
<FLAGS>rwx</FLAGS>
<NICK>maximum framerate</NICK>
<BLURB>Maximum framerate allowed to pass through (in frames per second, implies drop-only).</BLURB>
<DEFAULT>2147483647</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioRate::add</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Add</NICK>
<BLURB>Number of added samples.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioRate::drop</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Drop</NICK>
<BLURB>Number of dropped samples.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioRate::in</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>In</NICK>
<BLURB>Number of input samples.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioRate::out</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Out</NICK>
<BLURB>Number of output samples.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioRate::silent</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>silent</NICK>
<BLURB>Don't emit notify for dropped and duplicated frames.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioRate::tolerance</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>tolerance</NICK>
<BLURB>Only act if timestamp jitter/imperfection exceeds indicated tolerance (ns).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioRate::skip-to-first</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Skip to first buffer</NICK>
<BLURB>Don't produce buffers before the first one we receive.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextRender::font-desc</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>w</FLAGS>
<NICK>font description</NICK>
<BLURB>Pango font description of font to be used for rendering. See documentation of pango_font_description_from_string for syntax.</BLURB>
<DEFAULT>""</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextRender::halignment</NAME>
<TYPE>GstTextRenderHAlign</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>horizontal alignment</NICK>
<BLURB>Horizontal alignment of the text.</BLURB>
<DEFAULT>center</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextRender::line-alignment</NAME>
<TYPE>GstTextRenderLineAlign</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>line alignment</NICK>
<BLURB>Alignment of text lines relative to each other.</BLURB>
<DEFAULT>center</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextRender::valignment</NAME>
<TYPE>GstTextRenderVAlign</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>vertical alignment</NICK>
<BLURB>Vertical alignment of the text.</BLURB>
<DEFAULT>baseline</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextRender::xpad</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>rw</FLAGS>
<NICK>horizontal paddding</NICK>
<BLURB>Horizontal paddding when using left/right alignment.</BLURB>
<DEFAULT>25</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextRender::ypad</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>rw</FLAGS>
<NICK>vertical padding</NICK>
<BLURB>Vertical padding when using top/bottom alignment.</BLURB>
<DEFAULT>25</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::deltax</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>X position modifier</NICK>
<BLURB>Shift X position to the left or to the right. Unit is pixels.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::deltay</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Y position modifier</NICK>
<BLURB>Shift Y position up or down. Unit is pixels.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::font-desc</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>w</FLAGS>
<NICK>font description</NICK>
<BLURB>Pango font description of font to be used for rendering. See documentation of pango_font_description_from_string for syntax.</BLURB>
<DEFAULT>""</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::halign</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>w</FLAGS>
<NICK>horizontal alignment</NICK>
<BLURB>Horizontal alignment of the text (deprecated; use halignment).</BLURB>
<DEFAULT>"center"</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::shaded-background</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>shaded background</NICK>
<BLURB>Whether to shade the background under the text area.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::text</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>text</NICK>
<BLURB>Text to be display.</BLURB>
<DEFAULT>""</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::valign</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>w</FLAGS>
<NICK>vertical alignment</NICK>
<BLURB>Vertical alignment of the text (deprecated; use valignment).</BLURB>
<DEFAULT>"baseline"</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::wrap-mode</NAME>
<TYPE>GstTextOverlayWrapMode</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>wrap mode</NICK>
<BLURB>Whether to wrap the text and if so how.</BLURB>
<DEFAULT>wordchar</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::xpad</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>rw</FLAGS>
<NICK>horizontal paddding</NICK>
<BLURB>Horizontal paddding when using left/right alignment.</BLURB>
<DEFAULT>25</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::ypad</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>rw</FLAGS>
<NICK>vertical padding</NICK>
<BLURB>Vertical padding when using top/bottom alignment.</BLURB>
<DEFAULT>25</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::halignment</NAME>
<TYPE>GstTextOverlayHAlign</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>horizontal alignment</NICK>
<BLURB>Horizontal alignment of the text.</BLURB>
<DEFAULT>center</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::valignment</NAME>
<TYPE>GstTextOverlayVAlign</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>vertical alignment</NICK>
<BLURB>Vertical alignment of the text.</BLURB>
<DEFAULT>baseline</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::line-alignment</NAME>
<TYPE>GstTextOverlayLineAlign</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>line alignment</NICK>
<BLURB>Alignment of text lines relative to each other.</BLURB>
<DEFAULT>center</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::silent</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>silent</NICK>
<BLURB>Whether to render the text string.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::wait-text</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Wait Text</NICK>
<BLURB>Whether to wait for subtitles.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::auto-resize</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>auto resize</NICK>
<BLURB>Automatically adjust font size to screen-size.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::vertical-render</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>vertical render</NICK>
<BLURB>Vertical Render.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::color</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Color</NICK>
<BLURB>Color to use for text (big-endian ARGB).</BLURB>
<DEFAULT>4294967295</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::xpos</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>horizontal position</NICK>
<BLURB>Horizontal position when using position alignment.</BLURB>
<DEFAULT>0.5</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::ypos</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,1]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>vertical position</NICK>
<BLURB>Vertical position when using position alignment.</BLURB>
<DEFAULT>0.5</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::outline-color</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Text Outline Color</NICK>
<BLURB>Color to use for outline the text (big-endian ARGB).</BLURB>
<DEFAULT>4278190080</DEFAULT>
</ARG>

<ARG>
<NAME>GstTextOverlay::shadow</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>create shadow of text</NICK>
<BLURB>Whether to create a shadow of the letters under the text.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>CDParanoia::abort-on-skip</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Abort on skip</NICK>
<BLURB>Abort on imperfect reads/skips.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>CDParanoia::default-sectors</NAME>
<TYPE>gint</TYPE>
<RANGE>[-1,100]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Default sectors</NICK>
<BLURB>Force default number of sectors in read to n sectors.</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>CDParanoia::device</NAME>
<TYPE>gchararray</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Device</NICK>
<BLURB>CD device location.</BLURB>
<DEFAULT>"/dev/cdrom"</DEFAULT>
</ARG>

<ARG>
<NAME>CDParanoia::discid</NAME>
<TYPE>gchararray</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>discid</NICK>
<BLURB>The dics id.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>CDParanoia::endian</NAME>
<TYPE>GstParanoiaEndian</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Endian</NICK>
<BLURB>Force endian on drive.</BLURB>
<DEFAULT>treat drive as little endian</DEFAULT>
</ARG>

<ARG>
<NAME>CDParanoia::generic-device</NAME>
<TYPE>gchararray</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Generic device</NICK>
<BLURB>Use specified generic scsi device.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>CDParanoia::never-skip</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Never skip</NICK>
<BLURB>never accept any less than perfect data reconstruction (don't allow 'V's) but if [n] is given, skip after [n] retries without progress.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>CDParanoia::paranoia-mode</NAME>
<TYPE>GstParanoiaMode</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Paranoia mode</NICK>
<BLURB>Type of checking to perform.</BLURB>
<DEFAULT>Disable paranoid checking</DEFAULT>
</ARG>

<ARG>
<NAME>CDParanoia::read-speed</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Read speed</NICK>
<BLURB>Read from device at specified speed.</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>CDParanoia::search-overlap</NAME>
<TYPE>gint</TYPE>
<RANGE>[-1,75]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Search overlap</NICK>
<BLURB>Force minimum overlap search during verification to n sectors.</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>CDParanoia::toc-bias</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>TOC bias</NICK>
<BLURB>Assume that the beginning offset of track 1 as reported in the TOC will be addressed as LBA 0.  Necessary for some Toshiba drives to get track boundaries.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>CDParanoia::toc-offset</NAME>
<TYPE>gint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>TOC offset</NICK>
<BLURB>Add <n> sectors to the values reported.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAlsaMixerElement::device</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Device</NICK>
<BLURB>ALSA device, as defined in an asound configuration file.</BLURB>
<DEFAULT>"default"</DEFAULT>
</ARG>

<ARG>
<NAME>GstAlsaMixerElement::device-name</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Device name</NICK>
<BLURB>Human-readable name of the sound device.</BLURB>
<DEFAULT>""</DEFAULT>
</ARG>

<ARG>
<NAME>GstGnomeVFSSink::handle</NAME>
<TYPE>GnomeVFSHandle*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>GnomeVFSHandle</NICK>
<BLURB>Handle for GnomeVFS.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGnomeVFSSink::location</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>File Location</NICK>
<BLURB>Location of the file to write.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstGnomeVFSSink::uri</NAME>
<TYPE>GnomeVFSURI*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>GnomeVFSURI</NICK>
<BLURB>URI for GnomeVFS.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstCdParanoiaSrc::generic-device</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Generic device</NICK>
<BLURB>Use specified generic scsi device.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstCdParanoiaSrc::paranoia-mode</NAME>
<TYPE>GstCdParanoiaMode</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Paranoia mode</NICK>
<BLURB>Type of checking to perform.</BLURB>
<DEFAULT>PARANOIA_MODE_FRAGMENT</DEFAULT>
</ARG>

<ARG>
<NAME>GstCdParanoiaSrc::read-speed</NAME>
<TYPE>gint</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Read speed</NICK>
<BLURB>Read from device at specified speed.</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstCdParanoiaSrc::search-overlap</NAME>
<TYPE>gint</TYPE>
<RANGE>[-1,75]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Search overlap</NICK>
<BLURB>Force minimum overlap search during verification to n sectors.</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstCdParanoiaSrc::cache-size</NAME>
<TYPE>gint</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Cache size</NICK>
<BLURB>Set CD cache size to n sectors (-1 = auto).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstSubParse::subtitle-encoding</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>subtitle charset encoding</NICK>
<BLURB>Encoding to assume if input subtitles are not in UTF-8 or any other Unicode encoding. If not set, the GST_SUBTITLE_ENCODING environment variable will be checked for an encoding to use. If that is not set either, ISO-8859-15 will be assumed.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstSubParse::video-fps</NAME>
<TYPE>GstFraction</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Video framerate</NICK>
<BLURB>Framerate of the video stream. This is needed by some subtitle formats to synchronize subtitles and video properly. If not set and the subtitle format requires it subtitles may be out of sync.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstTheoraParse::synchronization-points</NAME>
<TYPE>GValueArray*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Synchronization points</NICK>
<BLURB>An array of (granuletime, buffertime) pairs.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGDPPay::crc-header</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>CRC Header</NICK>
<BLURB>Calculate and store a CRC checksum on the header.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGDPPay::crc-payload</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>CRC Payload</NICK>
<BLURB>Calculate and store a CRC checksum on the payload.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstGDPPay::version</NAME>
<TYPE>GstDPVersion</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Version</NICK>
<BLURB>Version of the GStreamer Data Protocol.</BLURB>
<DEFAULT>GST_DP_VERSION_1_0</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin2::caps</NAME>
<TYPE>GstCaps*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Caps</NICK>
<BLURB>The caps on which to stop decoding.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin2::subtitle-encoding</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>subtitle encoding</NICK>
<BLURB>Encoding to assume if input subtitles are not in UTF-8 encoding. If not set, the GST_SUBTITLE_ENCODING environment variable will be checked for an encoding to use. If that is not set either, ISO-8859-15 will be assumed.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin2::sink-caps</NAME>
<TYPE>GstCaps*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Sink Caps</NICK>
<BLURB>The caps of the input data. (NULL = use typefind element).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin2::high-percent</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,100]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>High percent</NICK>
<BLURB>High threshold for buffering to finish.</BLURB>
<DEFAULT>99</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin2::low-percent</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,100]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Low percent</NICK>
<BLURB>Low threshold for buffering to start.</BLURB>
<DEFAULT>10</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin2::max-size-buffers</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. size (buffers)</NICK>
<BLURB>Max. number of buffers in the queue (0=automatic).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin2::max-size-bytes</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. size (bytes)</NICK>
<BLURB>Max. amount of bytes in the queue (0=automatic).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin2::max-size-time</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. size (ns)</NICK>
<BLURB>Max. amount of data in the queue (in ns, 0=automatic).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin2::use-buffering</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Use Buffering</NICK>
<BLURB>Emit GST_MESSAGE_BUFFERING based on low-/high-percent thresholds.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin2::post-stream-topology</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Post Stream Topology</NICK>
<BLURB>Post stream-topology messages.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstDecodeBin2::expose-all-streams</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Expose All Streams</NICK>
<BLURB>Expose all streams, including those of unknown type or that don't match the 'caps' property.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::uri</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>URI</NICK>
<BLURB>URI to decode.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::connection-speed</NAME>
<TYPE>guint</TYPE>
<RANGE><= 4294967</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Connection Speed</NICK>
<BLURB>Network connection speed in kbps (0 = unknown).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::caps</NAME>
<TYPE>GstCaps*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Caps</NICK>
<BLURB>The caps on which to stop decoding. (NULL = default).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::subtitle-encoding</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>subtitle encoding</NICK>
<BLURB>Encoding to assume if input subtitles are not in UTF-8 encoding. If not set, the GST_SUBTITLE_ENCODING environment variable will be checked for an encoding to use. If that is not set either, ISO-8859-15 will be assumed.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::source</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Source</NICK>
<BLURB>Source object used.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::buffer-duration</NAME>
<TYPE>gint64</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Buffer duration (ns)</NICK>
<BLURB>Buffer duration when buffering streams (-1 default value).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::buffer-size</NAME>
<TYPE>gint</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Buffer size (bytes)</NICK>
<BLURB>Buffer size when buffering streams (-1 default value).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::download</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Download</NICK>
<BLURB>Attempt download buffering when buffering network streams.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::use-buffering</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Use Buffering</NICK>
<BLURB>Perform buffering on demuxed/parsed media.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::expose-all-streams</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Expose All Streams</NICK>
<BLURB>Expose all streams, including those of unknown type or that don't match the 'caps' property.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstURIDecodeBin::ring-buffer-max-size</NAME>
<TYPE>guint64</TYPE>
<RANGE><= G_MAXUINT</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. ring buffer size (bytes)</NICK>
<BLURB>Max. amount of data in the ring buffer (bytes, 0 = ring buffer disabled).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstQueue2::current-level-buffers</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Current level (buffers)</NICK>
<BLURB>Current number of buffers in the queue.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstQueue2::current-level-bytes</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Current level (kB)</NICK>
<BLURB>Current amount of data in the queue (bytes).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstQueue2::current-level-time</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Current level (ns)</NICK>
<BLURB>Current amount of data in the queue (in ns).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstQueue2::high-percent</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,100]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>High percent</NICK>
<BLURB>High threshold for buffering to finish.</BLURB>
<DEFAULT>99</DEFAULT>
</ARG>

<ARG>
<NAME>GstQueue2::low-percent</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,100]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Low percent</NICK>
<BLURB>Low threshold for buffering to start.</BLURB>
<DEFAULT>10</DEFAULT>
</ARG>

<ARG>
<NAME>GstQueue2::max-size-buffers</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. size (buffers)</NICK>
<BLURB>Max. number of buffers in the queue (0=disable).</BLURB>
<DEFAULT>100</DEFAULT>
</ARG>

<ARG>
<NAME>GstQueue2::max-size-bytes</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. size (kB)</NICK>
<BLURB>Max. amount of data in the queue (bytes, 0=disable).</BLURB>
<DEFAULT>2097152</DEFAULT>
</ARG>

<ARG>
<NAME>GstQueue2::max-size-time</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. size (ns)</NICK>
<BLURB>Max. amount of data in the queue (in ns, 0=disable).</BLURB>
<DEFAULT>2000000000</DEFAULT>
</ARG>

<ARG>
<NAME>GstQueue2::temp-location</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Temporary File Location</NICK>
<BLURB>Location to store temporary files in (Deprecated: Only read this property, use temp-tmpl to configure the name template).</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstQueue2::use-buffering</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Use buffering</NICK>
<BLURB>Emit GST_MESSAGE_BUFFERING based on low-/high-percent thresholds.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstQueue2::use-rate-estimate</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Use Rate Estimate</NICK>
<BLURB>Estimate the bitrate of the stream to calculate time level.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstQueue2::temp-template</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Temporary File Template</NICK>
<BLURB>File template to store temporary files in, should contain directory and XXXXXX. (NULL == disabled).</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioConvert::dithering</NAME>
<TYPE>GstAudioConvertDithering</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Dithering</NICK>
<BLURB>Selects between different dithering methods.</BLURB>
<DEFAULT>Triangular dithering (default)</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioConvert::noise-shaping</NAME>
<TYPE>GstAudioConvertNoiseShaping</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Noise shaping</NICK>
<BLURB>Selects between different noise shaping methods.</BLURB>
<DEFAULT>No noise shaping (default)</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::audio-sink</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Audio Sink</NICK>
<BLURB>the audio output element to use (NULL = default sink).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::connection-speed</NAME>
<TYPE>guint</TYPE>
<RANGE><= 4294967</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Connection Speed</NICK>
<BLURB>Network connection speed in kbps (0 = unknown).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::current-audio</NAME>
<TYPE>gint</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Current audio</NICK>
<BLURB>Currently playing audio stream (-1 = auto).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::current-text</NAME>
<TYPE>gint</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Current Text</NICK>
<BLURB>Currently playing text stream (-1 = auto).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::current-video</NAME>
<TYPE>gint</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Current Video</NICK>
<BLURB>Currently playing video stream (-1 = auto).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::flags</NAME>
<TYPE>GstPlayFlags</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Flags</NICK>
<BLURB>Flags to control behaviour.</BLURB>
<DEFAULT>Render the video stream|Render the audio stream|Render subtitles|Use software volume</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::frame</NAME>
<TYPE>GstBuffer*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Frame</NICK>
<BLURB>The last frame (NULL = no video available).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::n-audio</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>r</FLAGS>
<NICK>Number Audio</NICK>
<BLURB>Total number of audio streams.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::n-text</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>r</FLAGS>
<NICK>Number Text</NICK>
<BLURB>Total number of text streams.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::n-video</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>r</FLAGS>
<NICK>Number Video</NICK>
<BLURB>Total number of video streams.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::source</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Source</NICK>
<BLURB>Source element.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::subtitle-encoding</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>subtitle encoding</NICK>
<BLURB>Encoding to assume if input subtitles are not in UTF-8 encoding. If not set, the GST_SUBTITLE_ENCODING environment variable will be checked for an encoding to use. If that is not set either, ISO-8859-15 will be assumed.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::subtitle-font-desc</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>w</FLAGS>
<NICK>Subtitle font description</NICK>
<BLURB>Pango font description of font to be used for subtitle rendering.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::suburi</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>.sub-URI</NICK>
<BLURB>Optional URI of a subtitle.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::uri</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>URI</NICK>
<BLURB>URI of the media to play.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::video-sink</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Video Sink</NICK>
<BLURB>the video output element to use (NULL = default sink).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::vis-plugin</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Vis plugin</NICK>
<BLURB>the visualization element to use (NULL = default).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::volume</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,10]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Volume</NICK>
<BLURB>The audio volume, 1.0=100%.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::mute</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Mute</NICK>
<BLURB>Mute the audio channel without changing the volume.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::buffer-duration</NAME>
<TYPE>gint64</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Buffer duration (ns)</NICK>
<BLURB>Buffer duration when buffering network streams.</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::buffer-size</NAME>
<TYPE>gint</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Buffer size (bytes)</NICK>
<BLURB>Buffer size when buffering network streams.</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::text-sink</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Text plugin</NICK>
<BLURB>the text output element to use (NULL = default textoverlay).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::subpic-sink</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Subpicture plugin</NICK>
<BLURB>the subpicture output element to use (NULL = default dvdspu).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::av-offset</NAME>
<TYPE>gint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>AV Offset</NICK>
<BLURB>The synchronisation offset between audio and video in nanoseconds.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBin2::ring-buffer-max-size</NAME>
<TYPE>guint64</TYPE>
<RANGE><= G_MAXUINT</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. ring buffer size (bytes)</NICK>
<BLURB>Max. amount of data in the ring buffer (bytes, 0 = ring buffer disabled).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstGioSink::location</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Location</NICK>
<BLURB>URI location to write to.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstGioSink::file</NAME>
<TYPE>GFile*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>File</NICK>
<BLURB>GFile to write to.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGioSrc::location</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Location</NICK>
<BLURB>URI location to read from.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstGioSrc::file</NAME>
<TYPE>GFile*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>File</NICK>
<BLURB>GFile to read from.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGioStreamSink::stream</NAME>
<TYPE>GOutputStream*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Stream</NICK>
<BLURB>Stream to write to.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstGioStreamSrc::stream</NAME>
<TYPE>GInputStream*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Stream</NICK>
<BLURB>Stream to read from.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBaseBin::connection-speed</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Connection Speed</NICK>
<BLURB>Network connection speed in kbps (0 = unknown).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBaseBin::current-audio</NAME>
<TYPE>gint</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Current audio</NICK>
<BLURB>Currently playing audio stream (-1 = none).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBaseBin::current-text</NAME>
<TYPE>gint</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Current text</NICK>
<BLURB>Currently playing text stream (-1 = none).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBaseBin::current-video</NAME>
<TYPE>gint</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Current video</NICK>
<BLURB>Currently playing video stream (-1 = none).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBaseBin::nstreams</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>r</FLAGS>
<NICK>NStreams</NICK>
<BLURB>number of streams.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBaseBin::queue-min-threshold</NAME>
<TYPE>guint64</TYPE>
<RANGE><= G_MAXINT64</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Queue min threshold</NICK>
<BLURB>Buffering low threshold of internal queues in nanoseconds.</BLURB>
<DEFAULT>900000000</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBaseBin::queue-size</NAME>
<TYPE>guint64</TYPE>
<RANGE><= G_MAXINT64</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Queue size</NICK>
<BLURB>Size of internal queues in nanoseconds.</BLURB>
<DEFAULT>3000000000</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBaseBin::queue-threshold</NAME>
<TYPE>guint64</TYPE>
<RANGE><= G_MAXINT64</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Queue threshold</NICK>
<BLURB>Buffering threshold of internal queues in nanoseconds.</BLURB>
<DEFAULT>2850000000</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBaseBin::source</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Source</NICK>
<BLURB>Source element.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBaseBin::stream-info</NAME>
<TYPE>gpointer</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Stream info</NICK>
<BLURB>List of streaminfo.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBaseBin::stream-info-value-array</NAME>
<TYPE>GValueArray*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>StreamInfo GValueArray</NICK>
<BLURB>value array of streaminfo.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBaseBin::subtitle-encoding</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>subtitle encoding</NICK>
<BLURB>Encoding to assume if input subtitles are not in UTF-8 encoding. If not set, the GST_SUBTITLE_ENCODING environment variable will be checked for an encoding to use. If that is not set either, ISO-8859-15 will be assumed.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBaseBin::suburi</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>.sub-URI</NICK>
<BLURB>Optional URI of a subtitle.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlayBaseBin::uri</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>URI</NICK>
<BLURB>URI of the media to play.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstSpeexResample::filter-length</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>rwx</FLAGS>
<NICK>Filter length</NICK>
<BLURB>DEPRECATED, DON'T USE THIS! Length of the resample filter.</BLURB>
<DEFAULT>64</DEFAULT>
</ARG>

<ARG>
<NAME>GstSpeexResample::quality</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,10]</RANGE>
<FLAGS>rwx</FLAGS>
<NICK>Quality</NICK>
<BLURB>Resample quality with 0 being the lowest and 10 being the best.</BLURB>
<DEFAULT>4</DEFAULT>
</ARG>

<ARG>
<NAME>GstClockOverlay::time-format</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Date/Time Format</NICK>
<BLURB>Format to use for time and date value, as in strftime.</BLURB>
<DEFAULT>"%H:%M:%S"</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSink::caps</NAME>
<TYPE>GstCaps*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Caps</NICK>
<BLURB>The allowed caps for the sink pad.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSink::drop</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Drop</NICK>
<BLURB>Drop old buffers when the buffer queue is filled.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSink::emit-signals</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Emit signals</NICK>
<BLURB>Emit new-preroll, new-buffer and new-buffer-list signals.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSink::eos</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>EOS</NICK>
<BLURB>Check if the sink is EOS or not started.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSink::max-buffers</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max Buffers</NICK>
<BLURB>The maximum number of buffers to queue internally (0 = unlimited).</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::block</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Block</NICK>
<BLURB>Block push-buffer when max-bytes are queued.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::caps</NAME>
<TYPE>GstCaps*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Caps</NICK>
<BLURB>The allowed caps for the src pad.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::format</NAME>
<TYPE>GstFormat</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Format</NICK>
<BLURB>The format of the segment events and seek.</BLURB>
<DEFAULT>GST_FORMAT_BYTES</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::is-live</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Is Live</NICK>
<BLURB>Whether to act as a live source.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::max-bytes</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max bytes</NICK>
<BLURB>The maximum number of bytes to queue internally (0 = unlimited).</BLURB>
<DEFAULT>200000</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::max-latency</NAME>
<TYPE>gint64</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max Latency</NICK>
<BLURB>The maximum latency (-1 = unlimited).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::min-latency</NAME>
<TYPE>gint64</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Min Latency</NICK>
<BLURB>The minimum latency (-1 = default).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::size</NAME>
<TYPE>gint64</TYPE>
<RANGE>>= -1</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Size</NICK>
<BLURB>The size of the data stream in bytes (-1 if unknown).</BLURB>
<DEFAULT>-1</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::stream-type</NAME>
<TYPE>GstAppStreamType</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Stream Type</NICK>
<BLURB>the type of the stream.</BLURB>
<DEFAULT>GST_APP_STREAM_TYPE_STREAM</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::emit-signals</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Emit signals</NICK>
<BLURB>Emit need-data, enough-data and seek-data signals.</BLURB>
<DEFAULT>TRUE</DEFAULT>
</ARG>

<ARG>
<NAME>GstAppSrc::min-percent</NAME>
<TYPE>guint</TYPE>
<RANGE><= 100</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Min Percent</NICK>
<BLURB>Emit need-data when queued bytes drops below this percent of max-bytes.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioResample::filter-length</NAME>
<TYPE>gint</TYPE>
<RANGE>>= 0</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Filter length</NICK>
<BLURB>Length of the resample filter.</BLURB>
<DEFAULT>64</DEFAULT>
</ARG>

<ARG>
<NAME>GstAudioResample::quality</NAME>
<TYPE>gint</TYPE>
<RANGE>[0,10]</RANGE>
<FLAGS>rwx</FLAGS>
<NICK>Quality</NICK>
<BLURB>Resample quality with 0 being the lowest and 10 being the best.</BLURB>
<DEFAULT>4</DEFAULT>
</ARG>

<ARG>
<NAME>GstAdder::caps</NAME>
<TYPE>GstCaps*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Target caps</NICK>
<BLURB>Set target format for mixing (NULL means ANY). Setting this property takes a reference to the supplied GstCaps object.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::flags</NAME>
<TYPE>GstPlayFlags</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Flags</NICK>
<BLURB>Flags to control behaviour.</BLURB>
<DEFAULT>Render the video stream|Render the audio stream|Render subtitles|Use software volume</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::mute</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Mute</NICK>
<BLURB>Mute the audio channel without changing the volume.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::subtitle-font-desc</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>w</FLAGS>
<NICK>Subtitle font description</NICK>
<BLURB>Pango font description of font to be used for subtitle rendering.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::vis-plugin</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Vis plugin</NICK>
<BLURB>the visualization element to use (NULL = default).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::volume</NAME>
<TYPE>gdouble</TYPE>
<RANGE>[0,10]</RANGE>
<FLAGS>rw</FLAGS>
<NICK>Volume</NICK>
<BLURB>The audio volume, 1.0=100%.</BLURB>
<DEFAULT>1</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::subtitle-encoding</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>subtitle encoding</NICK>
<BLURB>Encoding to assume if input subtitles are not in UTF-8 encoding. If not set, the GST_SUBTITLE_ENCODING environment variable will be checked for an encoding to use. If that is not set either, ISO-8859-15 will be assumed.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::av-offset</NAME>
<TYPE>gint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>AV Offset</NICK>
<BLURB>The synchronisation offset between audio and video in nanoseconds.</BLURB>
<DEFAULT>0</DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::frame</NAME>
<TYPE>GstBuffer*</TYPE>
<RANGE></RANGE>
<FLAGS>r</FLAGS>
<NICK>Frame</NICK>
<BLURB>The last frame (NULL = no video available).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::audio-sink</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Audio Sink</NICK>
<BLURB>the audio output element to use (NULL = default sink).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::text-sink</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Text sink</NICK>
<BLURB>the text output element to use (NULL = default textoverlay).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstPlaySink::video-sink</NAME>
<TYPE>GstElement*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Video Sink</NICK>
<BLURB>the video output element to use (NULL = default sink).</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstSubtitleOverlay::font-desc</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Subtitle font description</NICK>
<BLURB>Pango font description of font to be used for subtitle rendering.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstSubtitleOverlay::silent</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Silent</NICK>
<BLURB>Whether to show subtitles.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstSubtitleOverlay::subtitle-encoding</NAME>
<TYPE>gchar*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>subtitle encoding</NICK>
<BLURB>Encoding to assume if input subtitles are not in UTF-8 encoding. If not set, the GST_SUBTITLE_ENCODING environment variable will be checked for an encoding to use. If that is not set either, ISO-8859-15 will be assumed.</BLURB>
<DEFAULT>NULL</DEFAULT>
</ARG>

<ARG>
<NAME>GstEncodeBin::audio-jitter-tolerance</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Audio jitter tolerance</NICK>
<BLURB>Amount of timestamp jitter/imperfection to allow on audio streams before inserting/dropping samples (ns).</BLURB>
<DEFAULT>20000000</DEFAULT>
</ARG>

<ARG>
<NAME>GstEncodeBin::avoid-reencoding</NAME>
<TYPE>gboolean</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Avoid re-encoding</NICK>
<BLURB>Whether to re-encode portions of compatible video streams that lay on segment boundaries.</BLURB>
<DEFAULT>FALSE</DEFAULT>
</ARG>

<ARG>
<NAME>GstEncodeBin::profile</NAME>
<TYPE>GstEncodingProfile*</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Profile</NICK>
<BLURB>The GstEncodingProfile to use.</BLURB>
<DEFAULT></DEFAULT>
</ARG>

<ARG>
<NAME>GstEncodeBin::queue-buffers-max</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. size (buffers)</NICK>
<BLURB>Max. number of buffers in the queue (0=disable).</BLURB>
<DEFAULT>200</DEFAULT>
</ARG>

<ARG>
<NAME>GstEncodeBin::queue-bytes-max</NAME>
<TYPE>guint</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. size (kB)</NICK>
<BLURB>Max. amount of data in the queue (bytes, 0=disable).</BLURB>
<DEFAULT>10485760</DEFAULT>
</ARG>

<ARG>
<NAME>GstEncodeBin::queue-time-max</NAME>
<TYPE>guint64</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Max. size (ns)</NICK>
<BLURB>Max. amount of data in the queue (in ns, 0=disable).</BLURB>
<DEFAULT>1000000000</DEFAULT>
</ARG>

<ARG>
<NAME>GstEncodeBin::flags</NAME>
<TYPE>GstEncFlags</TYPE>
<RANGE></RANGE>
<FLAGS>rw</FLAGS>
<NICK>Flags</NICK>
<BLURB>Flags to control behaviour.</BLURB>
<DEFAULT></DEFAULT>
</ARG>


<SIGNAL>
<NAME>GstMultiFdSink::add</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstMultiFdSink *gstmultifdsink
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstMultiFdSink::clear</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstMultiFdSink *gstmultifdsink
</SIGNAL>

<SIGNAL>
<NAME>GstMultiFdSink::client-added</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstMultiFdSink *gstmultifdsink
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstMultiFdSink::client-removed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstMultiFdSink *gstmultifdsink
gint  arg1
GstClientStatus  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstMultiFdSink::get-stats</NAME>
<RETURNS>GValueArray*</RETURNS>
<FLAGS>la</FLAGS>
GstMultiFdSink *gstmultifdsink
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstMultiFdSink::remove</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstMultiFdSink *gstmultifdsink
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstMultiFdSink::client-fd-removed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstMultiFdSink *gstmultifdsink
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstMultiFdSink::add-full</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstMultiFdSink *gstmultifdsink
gint  arg1
GstSyncMethod  arg2
GstTCPUnitType  arg3
guint64  arg4
GstTCPUnitType  arg5
guint64  arg6
</SIGNAL>

<SIGNAL>
<NAME>GstMultiFdSink::remove-flush</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstMultiFdSink *gstmultifdsink
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstDecodeBin::new-decoded-pad</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstDecodeBin *gstdecodebin
GstPad *arg1
gboolean  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstDecodeBin::removed-decoded-pad</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstDecodeBin *gstdecodebin
GstPad *arg1
</SIGNAL>

<SIGNAL>
<NAME>GstDecodeBin::unknown-type</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstDecodeBin *gstdecodebin
GstPad *arg1
GstCaps *arg2
</SIGNAL>

<SIGNAL>
<NAME>CDParanoia::smilie-change</NAME>
<RETURNS>void</RETURNS>
CDParanoia *cdparanoia
gchar *arg1
</SIGNAL>

<SIGNAL>
<NAME>CDParanoia::transport-error</NAME>
<RETURNS>void</RETURNS>
CDParanoia *cdparanoia
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>CDParanoia::uncorrected-error</NAME>
<RETURNS>void</RETURNS>
CDParanoia *cdparanoia
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstGnomeVFSSink::allow-overwrite</NAME>
<RETURNS>gboolean</RETURNS>
<FLAGS>c</FLAGS>
GstGnomeVFSSink *gstgnomevfssink
GnomeVFSURI *arg1
</SIGNAL>

<SIGNAL>
<NAME>GstCdParanoiaSrc::transport-error</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstCdParanoiaSrc *gstcdparanoiasrc
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstCdParanoiaSrc::uncorrected-error</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstCdParanoiaSrc *gstcdparanoiasrc
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstDecodeBin2::autoplug-continue</NAME>
<RETURNS>gboolean</RETURNS>
<FLAGS>l</FLAGS>
GstDecodeBin2 *gstdecodebin2
GstPad *arg1
GstCaps *arg2
</SIGNAL>

<SIGNAL>
<NAME>GstDecodeBin2::autoplug-sort</NAME>
<RETURNS>GValueArray*</RETURNS>
<FLAGS>l</FLAGS>
GstDecodeBin2 *gstdecodebin2
GstPad *arg1
GstCaps *arg2
GValueArray *arg3
</SIGNAL>

<SIGNAL>
<NAME>GstDecodeBin2::new-decoded-pad</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstDecodeBin2 *gstdecodebin2
GstPad *arg1
gboolean  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstDecodeBin2::removed-decoded-pad</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstDecodeBin2 *gstdecodebin2
GstPad *arg1
</SIGNAL>

<SIGNAL>
<NAME>GstDecodeBin2::unknown-type</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstDecodeBin2 *gstdecodebin2
GstPad *arg1
GstCaps *arg2
</SIGNAL>

<SIGNAL>
<NAME>GstDecodeBin2::autoplug-factories</NAME>
<RETURNS>GValueArray*</RETURNS>
<FLAGS>l</FLAGS>
GstDecodeBin2 *gstdecodebin2
GstPad *arg1
GstCaps *arg2
</SIGNAL>

<SIGNAL>
<NAME>GstDecodeBin2::autoplug-select</NAME>
<RETURNS>GstAutoplugSelectResult</RETURNS>
<FLAGS>l</FLAGS>
GstDecodeBin2 *gstdecodebin2
GstPad *arg1
GstCaps *arg2
GstElementFactory *arg3
</SIGNAL>

<SIGNAL>
<NAME>GstDecodeBin2::drained</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstDecodeBin2 *gstdecodebin2
</SIGNAL>

<SIGNAL>
<NAME>GstURIDecodeBin::autoplug-continue</NAME>
<RETURNS>gboolean</RETURNS>
<FLAGS>l</FLAGS>
GstURIDecodeBin *gsturidecodebin
GstPad *arg1
GstCaps *arg2
</SIGNAL>

<SIGNAL>
<NAME>GstURIDecodeBin::autoplug-factories</NAME>
<RETURNS>GValueArray*</RETURNS>
<FLAGS>l</FLAGS>
GstURIDecodeBin *gsturidecodebin
GstPad *arg1
GstCaps *arg2
</SIGNAL>

<SIGNAL>
<NAME>GstURIDecodeBin::autoplug-select</NAME>
<RETURNS>GstAutoplugSelectResult</RETURNS>
<FLAGS>l</FLAGS>
GstURIDecodeBin *gsturidecodebin
GstPad *arg1
GstCaps *arg2
GstElementFactory *arg3
</SIGNAL>

<SIGNAL>
<NAME>GstURIDecodeBin::unknown-type</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstURIDecodeBin *gsturidecodebin
GstPad *arg1
GstCaps *arg2
</SIGNAL>

<SIGNAL>
<NAME>GstURIDecodeBin::drained</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstURIDecodeBin *gsturidecodebin
</SIGNAL>

<SIGNAL>
<NAME>GstURIDecodeBin::autoplug-sort</NAME>
<RETURNS>GValueArray*</RETURNS>
<FLAGS>l</FLAGS>
GstURIDecodeBin *gsturidecodebin
GstPad *arg1
GstCaps *arg2
GValueArray *arg3
</SIGNAL>

<SIGNAL>
<NAME>GstURIDecodeBin::source-setup</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstURIDecodeBin *gsturidecodebin
GstElement *arg1
</SIGNAL>

<SIGNAL>
<NAME>GstPlayBin2::about-to-finish</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstPlayBin2 *gstplaybin2
</SIGNAL>

<SIGNAL>
<NAME>GstPlayBin2::audio-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstPlayBin2 *gstplaybin2
</SIGNAL>

<SIGNAL>
<NAME>GstPlayBin2::get-audio-tags</NAME>
<RETURNS>GstTagList*</RETURNS>
<FLAGS>la</FLAGS>
GstPlayBin2 *gstplaybin2
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstPlayBin2::get-text-tags</NAME>
<RETURNS>GstTagList*</RETURNS>
<FLAGS>la</FLAGS>
GstPlayBin2 *gstplaybin2
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstPlayBin2::get-video-tags</NAME>
<RETURNS>GstTagList*</RETURNS>
<FLAGS>la</FLAGS>
GstPlayBin2 *gstplaybin2
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstPlayBin2::text-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstPlayBin2 *gstplaybin2
</SIGNAL>

<SIGNAL>
<NAME>GstPlayBin2::video-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstPlayBin2 *gstplaybin2
</SIGNAL>

<SIGNAL>
<NAME>GstPlayBin2::convert-frame</NAME>
<RETURNS>GstBuffer*</RETURNS>
<FLAGS>la</FLAGS>
GstPlayBin2 *gstplaybin2
GstCaps *arg1
</SIGNAL>

<SIGNAL>
<NAME>GstPlayBin2::get-audio-pad</NAME>
<RETURNS>GstPad*</RETURNS>
<FLAGS>la</FLAGS>
GstPlayBin2 *gstplaybin2
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstPlayBin2::get-text-pad</NAME>
<RETURNS>GstPad*</RETURNS>
<FLAGS>la</FLAGS>
GstPlayBin2 *gstplaybin2
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstPlayBin2::get-video-pad</NAME>
<RETURNS>GstPad*</RETURNS>
<FLAGS>la</FLAGS>
GstPlayBin2 *gstplaybin2
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstPlayBin2::audio-tags-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstPlayBin2 *gstplaybin2
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstPlayBin2::text-tags-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstPlayBin2 *gstplaybin2
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstPlayBin2::video-tags-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstPlayBin2 *gstplaybin2
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstPlayBin2::source-setup</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstPlayBin2 *gstplaybin2
GstElement *arg1
</SIGNAL>

<SIGNAL>
<NAME>GstAppSink::eos</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstAppSink *gstappsink
</SIGNAL>

<SIGNAL>
<NAME>GstAppSink::new-buffer</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstAppSink *gstappsink
</SIGNAL>

<SIGNAL>
<NAME>GstAppSink::new-preroll</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstAppSink *gstappsink
</SIGNAL>

<SIGNAL>
<NAME>GstAppSink::pull-buffer</NAME>
<RETURNS>GstBuffer*</RETURNS>
<FLAGS>la</FLAGS>
GstAppSink *gstappsink
</SIGNAL>

<SIGNAL>
<NAME>GstAppSink::pull-preroll</NAME>
<RETURNS>GstBuffer*</RETURNS>
<FLAGS>la</FLAGS>
GstAppSink *gstappsink
</SIGNAL>

<SIGNAL>
<NAME>GstAppSink::new-buffer-list</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstAppSink *gstappsink
</SIGNAL>

<SIGNAL>
<NAME>GstAppSink::pull-buffer-list</NAME>
<RETURNS>GstBufferList*</RETURNS>
<FLAGS>la</FLAGS>
GstAppSink *gstappsink
</SIGNAL>

<SIGNAL>
<NAME>GstAppSrc::end-of-stream</NAME>
<RETURNS>GstFlowReturn</RETURNS>
<FLAGS>la</FLAGS>
GstAppSrc *gstappsrc
</SIGNAL>

<SIGNAL>
<NAME>GstAppSrc::enough-data</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstAppSrc *gstappsrc
</SIGNAL>

<SIGNAL>
<NAME>GstAppSrc::need-data</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstAppSrc *gstappsrc
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstAppSrc::push-buffer</NAME>
<RETURNS>GstFlowReturn</RETURNS>
<FLAGS>la</FLAGS>
GstAppSrc *gstappsrc
GstBuffer *arg1
</SIGNAL>

<SIGNAL>
<NAME>GstAppSrc::seek-data</NAME>
<RETURNS>gboolean</RETURNS>
<FLAGS>l</FLAGS>
GstAppSrc *gstappsrc
guint64  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstPlaySink::reconfigure</NAME>
<RETURNS>gboolean</RETURNS>
<FLAGS>la</FLAGS>
GstPlaySink *gstplaysink
</SIGNAL>

<SIGNAL>
<NAME>GstPlaySink::convert-frame</NAME>
<RETURNS>GstBuffer*</RETURNS>
<FLAGS>la</FLAGS>
GstPlaySink *gstplaysink
GstCaps *arg1
</SIGNAL>

<SIGNAL>
<NAME>GstEncodeBin::request-pad</NAME>
<RETURNS>GstPad*</RETURNS>
<FLAGS>la</FLAGS>
GstEncodeBin *gstencodebin
GstCaps *arg1
</SIGNAL>


<SIGNAL>
<NAME>GstQTDemux::got-redirect</NAME>
<RETURNS>void</RETURNS>
GstQTDemux *gstqtdemux
gchar *arg1
</SIGNAL>

<SIGNAL>
<NAME>GstGSMEnc::frame-encoded</NAME>
<RETURNS>void</RETURNS>
GstGSMEnc *gstgsmenc
</SIGNAL>

<SIGNAL>
<NAME>GstMultiUDPSink::add</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstMultiUDPSink *gstmultiudpsink
gchar *arg1
gint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstMultiUDPSink::clear</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstMultiUDPSink *gstmultiudpsink
</SIGNAL>

<SIGNAL>
<NAME>GstMultiUDPSink::client-added</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstMultiUDPSink *gstmultiudpsink
gchar *arg1
gint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstMultiUDPSink::client-removed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstMultiUDPSink *gstmultiudpsink
gchar *arg1
gint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstMultiUDPSink::get-stats</NAME>
<RETURNS>GValueArray*</RETURNS>
<FLAGS>la</FLAGS>
GstMultiUDPSink *gstmultiudpsink
gchar *arg1
gint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstMultiUDPSink::remove</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstMultiUDPSink *gstmultiudpsink
gchar *arg1
gint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstDynUDPSink::get-stats</NAME>
<RETURNS>GValueArray*</RETURNS>
<FLAGS>l</FLAGS>
GstDynUDPSink *gstdynudpsink
gchar *arg1
gint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstFdSrc::timeout</NAME>
<RETURNS>void</RETURNS>
GstFdSrc *gstfdsrc
</SIGNAL>

<SIGNAL>
<NAME>GstDiceTV::reset</NAME>
<RETURNS>void</RETURNS>
GstDiceTV *gstdicetv
</SIGNAL>

<SIGNAL>
<NAME>GstVertigoTV::reset-parms</NAME>
<RETURNS>void</RETURNS>
GstVertigoTV *gstvertigotv
</SIGNAL>

<SIGNAL>
<NAME>GstShout2send::connection-problem</NAME>
<RETURNS>void</RETURNS>
<FLAGS>c</FLAGS>
GstShout2send *gstshout2send
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>DV1394Src::frame-dropped</NAME>
<RETURNS>void</RETURNS>
DV1394Src *dv1394src
</SIGNAL>

<SIGNAL>
<NAME>GstJpegEnc::frame-encoded</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstJpegEnc *gstjpegenc
</SIGNAL>

<SIGNAL>
<NAME>GstAASink::frame-displayed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstAASink *gstaasink
</SIGNAL>

<SIGNAL>
<NAME>GstAASink::have-size</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstAASink *gstaasink
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstMultiFdSink::add</NAME>
<RETURNS>void</RETURNS>
GstMultiFdSink *gstmultifdsink
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstMultiFdSink::clear</NAME>
<RETURNS>void</RETURNS>
GstMultiFdSink *gstmultifdsink
</SIGNAL>

<SIGNAL>
<NAME>GstMultiFdSink::client-added</NAME>
<RETURNS>void</RETURNS>
GstMultiFdSink *gstmultifdsink
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstMultiFdSink::client-removed</NAME>
<RETURNS>void</RETURNS>
GstMultiFdSink *gstmultifdsink
gint  arg1
GstClientStatus  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstMultiFdSink::get-stats</NAME>
<RETURNS>GValueArray*</RETURNS>
GstMultiFdSink *gstmultifdsink
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstMultiFdSink::remove</NAME>
<RETURNS>void</RETURNS>
GstMultiFdSink *gstmultifdsink
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstDecodeBin::new-decoded-pad</NAME>
<RETURNS>void</RETURNS>
GstDecodeBin *gstdecodebin
GstPad *arg1
gboolean  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstDecodeBin::removed-decoded-pad</NAME>
<RETURNS>void</RETURNS>
GstDecodeBin *gstdecodebin
GstPad *arg1
</SIGNAL>

<SIGNAL>
<NAME>GstDecodeBin::unknown-type</NAME>
<RETURNS>void</RETURNS>
GstDecodeBin *gstdecodebin
GstPad *arg1
GstCaps *arg2
</SIGNAL>

<SIGNAL>
<NAME>GstFakeSrc::handoff</NAME>
<RETURNS>void</RETURNS>
GstFakeSrc *gstfakesrc
GstBuffer  arg1
GstPad *arg2
</SIGNAL>

<SIGNAL>
<NAME>GstFakeSink::handoff</NAME>
<RETURNS>void</RETURNS>
GstFakeSink *gstfakesink
GstBuffer  arg1
GstPad *arg2
</SIGNAL>

<SIGNAL>
<NAME>GstIdentity::handoff</NAME>
<RETURNS>void</RETURNS>
GstIdentity *gstidentity
GstBuffer  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstTypeFindElement::have-type</NAME>
<RETURNS>void</RETURNS>
GstTypeFindElement *gsttypefindelement
guint  arg1
GstCaps *arg2
</SIGNAL>

<SIGNAL>
<NAME>GstQueue::overrun</NAME>
<RETURNS>void</RETURNS>
GstQueue *gstqueue
</SIGNAL>

<SIGNAL>
<NAME>GstQueue::running</NAME>
<RETURNS>void</RETURNS>
GstQueue *gstqueue
</SIGNAL>

<SIGNAL>
<NAME>GstQueue::underrun</NAME>
<RETURNS>void</RETURNS>
GstQueue *gstqueue
</SIGNAL>

<SIGNAL>
<NAME>GstBin::element-added</NAME>
<RETURNS>void</RETURNS>
GstBin *gstbin
GstElement *arg1
</SIGNAL>

<SIGNAL>
<NAME>GstBin::element-removed</NAME>
<RETURNS>void</RETURNS>
GstBin *gstbin
GstElement *arg1
</SIGNAL>

<SIGNAL>
<NAME>GstDV1394Src::frame-dropped</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstDV1394Src *gstdv1394src
</SIGNAL>

<SIGNAL>
<NAME>GstRTPDec::clear-pt-map</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRTPDec *gstrtpdec
</SIGNAL>

<SIGNAL>
<NAME>GstRTPDec::request-pt-map</NAME>
<RETURNS>GstCaps*</RETURNS>
<FLAGS>l</FLAGS>
GstRTPDec *gstrtpdec
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRTPDec::on-bye-ssrc</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRTPDec *gstrtpdec
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRTPDec::on-bye-timeout</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRTPDec *gstrtpdec
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRTPDec::on-new-ssrc</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRTPDec *gstrtpdec
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRTPDec::on-ssrc-collision</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRTPDec *gstrtpdec
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRTPDec::on-ssrc-validated</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRTPDec *gstrtpdec
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRTPDec::on-timeout</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRTPDec *gstrtpdec
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstAudioFIRFilter::rate-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstAudioFIRFilter *gstaudiofirfilter
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstAudioIIRFilter::rate-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstAudioIIRFilter *gstaudioiirfilter
gint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::clear-pt-map</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstRtpBin *gstrtpbin
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::get-internal-session</NAME>
<RETURNS>RTPSession*</RETURNS>
<FLAGS>la</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-bye-ssrc</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-bye-timeout</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-new-ssrc</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-npt-stop</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-sender-timeout</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-ssrc-active</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-ssrc-collision</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-ssrc-sdes</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-ssrc-validated</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::on-timeout</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::request-pt-map</NAME>
<RETURNS>GstCaps*</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::reset-sync</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstRtpBin *gstrtpbin
</SIGNAL>

<SIGNAL>
<NAME>GstRtpBin::payload-type-change</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpBin *gstrtpbin
guint  arg1
guint  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpJitterBuffer::clear-pt-map</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstRtpJitterBuffer *gstrtpjitterbuffer
</SIGNAL>

<SIGNAL>
<NAME>GstRtpJitterBuffer::handle-sync</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpJitterBuffer *gstrtpjitterbuffer
GstStructure *arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpJitterBuffer::on-npt-stop</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpJitterBuffer *gstrtpjitterbuffer
</SIGNAL>

<SIGNAL>
<NAME>GstRtpJitterBuffer::request-pt-map</NAME>
<RETURNS>GstCaps*</RETURNS>
<FLAGS>l</FLAGS>
GstRtpJitterBuffer *gstrtpjitterbuffer
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpJitterBuffer::set-active</NAME>
<RETURNS>guint64</RETURNS>
<FLAGS>la</FLAGS>
GstRtpJitterBuffer *gstrtpjitterbuffer
gboolean  arg1
guint64  arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpPtDemux::clear-pt-map</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstRtpPtDemux *gstrtpptdemux
</SIGNAL>

<SIGNAL>
<NAME>GstRtpPtDemux::new-payload-type</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpPtDemux *gstrtpptdemux
guint  arg1
GstPad *arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpPtDemux::payload-type-change</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpPtDemux *gstrtpptdemux
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpPtDemux::request-pt-map</NAME>
<RETURNS>GstCaps*</RETURNS>
<FLAGS>l</FLAGS>
GstRtpPtDemux *gstrtpptdemux
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::clear-pt-map</NAME>
<RETURNS>void</RETURNS>
<FLAGS>a</FLAGS>
GstRtpSession *gstrtpsession
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::on-bye-ssrc</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::on-bye-timeout</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::on-new-ssrc</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::on-sender-timeout</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::on-ssrc-active</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::on-ssrc-collision</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::on-ssrc-sdes</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::on-ssrc-validated</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::on-timeout</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSession::request-pt-map</NAME>
<RETURNS>GstCaps*</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSession *gstrtpsession
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSsrcDemux::clear-ssrc</NAME>
<RETURNS>void</RETURNS>
<FLAGS>la</FLAGS>
GstRtpSsrcDemux *gstrtpssrcdemux
guint  arg1
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSsrcDemux::new-ssrc-pad</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSsrcDemux *gstrtpssrcdemux
guint  arg1
GstPad *arg2
</SIGNAL>

<SIGNAL>
<NAME>GstRtpSsrcDemux::removed-ssrc-pad</NAME>
<RETURNS>void</RETURNS>
<FLAGS>l</FLAGS>
GstRtpSsrcDemux *gstrtpssrcdemux
guint  arg1
GstPad *arg2
</SIGNAL>

<SIGNAL>
<NAME>GstCairoOverlay::caps-changed</NAME>
<RETURNS>void</RETURNS>
<FLAGS></FLAGS>
GstCairoOverlay *gstcairooverlay
GstCaps *arg1
</SIGNAL>

<SIGNAL>
<NAME>GstCairoOverlay::draw</NAME>
<RETURNS>void</RETURNS>
<FLAGS></FLAGS>
GstCairoOverlay *gstcairooverlay
CairoContext *arg1
guint64  arg2
guint64  arg3
</SIGNAL>

